/*
Important packages
fmt
time
math
io 
reader
images


*/

packages can export values by . 
mutiple returns are possible in go 
return without any vriables retirn the vales from the function intilization
function can we variable level or function level 
for loop can be used as while loop without semi colons
for{} infinite loop
if statemenr can also have intilizations before the comparision
variables intialized at if statement can be used inse if{} and else{} only 
integer in swutch is not allowed in go
defer statements stops the execution of the staement till surrounding func is executed
function acn also be passed as vlaues in go
closure are function that references variable from outsides its body
The select statement lets a goroutine wait on multiple communication operations.

for acccessing a variable in different packages we need to assign a name starting with capital letter 
make function is used to create slices 

go mod tidy â€” go mod tidy works by loading all of the packages in the main module and all of the packages they import, recursively.

interfaces - values can be of more than one type
h.(type) - for getting the type from which human interface is coming
asserting a type in go lang - h.(person).first
every type is a interface type in go language
go routines hel us achieve the parrallelism
go routines are managed by go runtimes instead of normal threads being manged by the OS
Do not communicate by sharing memory;instead, share memory by communicating.

mutex provides you a lock on the memory till the perticular go routine is executed

mutexrw allow anybody for reading purpose, if someone comes for the writing purposes i will kick
them out and let the write request execute 
t

In Go language, the select statement is just like switch statement, but in the select statement, 
case statement refers to communication, i.e. sent or receive operation on the channel.

buffer allows us to handle some any size of the dynamic length, which makes it flexible.

context is a standard package of Golang that makes it easy to pass request-scoped values, cancelation signals, and deadlines across API boundaries to all the goroutines involved in handling a reques